{"version":3,"sources":["components/DropdownItem/DropdownItem.tsx","components/DropdownMenu/DropdownMenu.tsx","data/people.ts","App.tsx","index.tsx"],"names":["DropdownItem","memo","person","onSelected","name","className","href","onClick","event","preventDefault","DropdownMenu","people","role","length","map","slug","peopleFromServer","sex","born","died","fatherName","motherName","App","useState","query","setQuery","appliedQuery","setAppliedQuery","selectedPerson","setSelectedPerson","isSuggestionsVisible","setIsSuggestionsVisible","applyQuery","useCallback","func","delay","timerId","clearTimeout","setTimeout","debounce","visiblePeople","useMemo","formattedQuery","toLowerCase","replace","filter","includes","getVisiblePeople","isDropdownMenuVisible","type","placeholder","value","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"qMAQaA,EAA4CC,gBAAK,YAGvD,IAFLC,EAEI,EAFJA,OACAC,EACI,EADJA,WAQQC,EAASF,EAATE,KAER,OACE,qBAAKC,UAAU,gBAAf,SACE,mBACEC,KAAK,IACLD,UAAU,gBACVE,QAbc,SAACC,GACnBA,EAAMC,iBAENN,EAAWD,EACZ,EAMG,SAKGE,KAIR,ICtBYM,EAA4CT,gBAAK,YAGvD,IAFLU,EAEI,EAFJA,OACAR,EACI,EADJA,WAEA,OACE,qBAAKE,UAAU,gBAAgBO,KAAK,OAApC,SACE,qBAAKP,UAAU,mBAAf,SACGM,EAAOE,OAEJF,EAAOG,KAAI,SAACZ,GAAD,OACT,cAACF,EAAD,CACEE,OAAQA,EACRC,WAAYA,GACPD,EAAOa,KAJL,IAQX,sBAAMV,UAAU,gBAAhB,wCAOX,IC/BYW,EAA6B,CACxC,CACEZ,KAAM,oBACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,oBACZN,KAAM,0BAER,CACEX,KAAM,mBACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,qBACZC,WAAY,mBACZN,KAAM,yBAER,CACEX,KAAM,iBACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,oBACZC,WAAY,2BACZN,KAAM,uBAER,CACEX,KAAM,kBACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,sBACZC,WAAY,oBACZN,KAAM,wBAER,CACEX,KAAM,sBACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,mBACZN,KAAM,4BAER,CACEX,KAAM,wBACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,gCACZC,WAAY,KACZN,KAAM,8BAER,CACEX,KAAM,wBACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,KACZN,KAAM,8BAER,CACEX,KAAM,kBACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,gBACZN,KAAM,wBAER,CACEX,KAAM,kBACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,oBACZC,WAAY,cACZN,KAAM,wBAER,CACEX,KAAM,wBACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,uBACZC,WAAY,eACZN,KAAM,8BAER,CACEX,KAAM,mBACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,uBACZC,WAAY,KACZN,KAAM,yBAER,CACEX,KAAM,mBACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,iBACZN,KAAM,yBAER,CACEX,KAAM,2BACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,qBACZN,KAAM,iCAER,CACEX,KAAM,uBACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,wBACZC,WAAY,gBACZN,KAAM,6BAER,CACEX,KAAM,wBACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,2BACZC,WAAY,KACZN,KAAM,8BAER,CACEX,KAAM,mBACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZN,KAAM,yBAER,CACEX,KAAM,0BACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,yBACZC,WAAY,uBACZN,KAAM,gCAER,CACEX,KAAM,oBACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,wBACZC,WAAY,wBACZN,KAAM,0BAER,CACEX,KAAM,mBACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,2BACZC,WAAY,mBACZN,KAAM,yBAER,CACEX,KAAM,sBACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,iBACZN,KAAM,4BAER,CACEX,KAAM,gBACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,KACZC,WAAY,KACZN,KAAM,sBAER,CACEX,KAAM,2BACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,wBACZC,WAAY,mBACZN,KAAM,iCAER,CACEX,KAAM,iBACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,iBACZC,WAAY,mBACZN,KAAM,uBAER,CACEX,KAAM,mBACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,iBACZC,WAAY,2BACZN,KAAM,yBAER,CACEX,KAAM,iBACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,qBACZN,KAAM,uBAER,CACEX,KAAM,mBACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZN,KAAM,yBAER,CACEX,KAAM,mBACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,iBACZN,KAAM,yBAER,CACEX,KAAM,kBACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,qBACZN,KAAM,wBAER,CACEX,KAAM,yBACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,2BACZC,WAAY,mBACZN,KAAM,+BAER,CACEX,KAAM,kBACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,mBACZN,KAAM,wBAER,CACEX,KAAM,uBACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZN,KAAM,6BAER,CACEX,KAAM,iBACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,cACZC,WAAY,iBACZN,KAAM,uBAER,CACEX,KAAM,sBACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,iBACZN,KAAM,4BAER,CACEX,KAAM,kBACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,0BACZC,WAAY,iBACZN,KAAM,wBAER,CACEX,KAAM,mBACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,wBACZN,KAAM,yBAER,CACEX,KAAM,gBACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,mBACZC,WAAY,mBACZN,KAAM,sBAER,CACEX,KAAM,iBACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,uBACZC,WAAY,uBACZN,KAAM,uBAER,CACEX,KAAM,cACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,gBACZC,WAAY,oBACZN,KAAM,oBAER,CACEX,KAAM,gCACNa,IAAK,IACLC,KAAM,KACNC,KAAM,KACNC,WAAY,kBACZC,WAAY,sBACZN,KAAM,uCCjUGO,G,MAAgB,WAC3B,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAA4CJ,mBAAwB,MAApE,mBAAOK,EAAP,KAAuBC,EAAvB,KACA,EAAwDN,oBAAS,GAAjE,mBAAOO,EAAP,KAA6BC,EAA7B,KAEMC,EAAaC,sBAlBJ,SACfC,EACAC,GAEA,IAAIC,EAEJ,OAAO,SAACZ,GACNa,aAAaD,GACbA,EAAUE,WAAWJ,EAAMC,EAAOX,EACnC,CACF,CASGe,CAASZ,EAAiB,KAC1B,IAGIa,EAAgBC,mBAAQ,WAG5B,OAFAV,GAAwB,GArCH,SAACpB,EAAkBa,GAC1C,IAAMkB,EAAiBlB,EACpBmB,cACAC,QAAQ,UAAW,KAEtB,OAAOjC,EACJkC,QAAO,SAAA3C,GAGN,OAFsBA,EAAOE,KAAKuC,cAEbG,SAASJ,EAC/B,GACJ,CA4BUK,CAAiB/B,EAAkBU,EAC3C,GACD,CAACV,EAAkBU,IAgBbsB,EAAwBlB,GAAwBJ,EAEtD,OACE,uBAAMrB,UAAU,UAAhB,UACE,oBAAIA,UAAU,QAAd,SACGuB,EAAc,UAERA,EAAexB,KAFP,aAEgBwB,EAAeV,KAF/B,cAEyCU,EAAeT,KAFxD,KAIX,uBAIN,sBAAKd,UAAU,qBAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,uBACE4C,KAAK,OACLC,YAAY,2BACZ7C,UAAU,QACV8C,MAAO3B,EACP4B,SAlCgB,SAAC5C,GACzB,IAAQ2C,EAAU3C,EAAM6C,OAAhBF,MAER1B,EAAS0B,GACTnB,EAAWmB,GACXpB,GAAwB,EACzB,MAgCMiB,GACC,cAACtC,EAAD,CACEC,OAAQ6B,EACRrC,WAjCS,SAACD,GAClBuB,EAASvB,EAAOE,MAChByB,EAAkB3B,GAClB6B,GAAwB,EACzB,SAmCF,GC5FDuB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,Q","file":"static/js/main.24a81e1c.chunk.js","sourcesContent":["import React, { memo } from 'react';\nimport { Person } from '../../types/Person';\n\ninterface DropdownItemProps {\n  person: Person;\n  onSelected: (person: Person) => void;\n}\n\nexport const DropdownItem: React.FC<DropdownItemProps> = memo(({\n  person,\n  onSelected,\n}) => {\n  const handleClick = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n\n    onSelected(person);\n  };\n\n  const { name } = person;\n\n  return (\n    <div className=\"dropdown-item\">\n      <a\n        href=\"/\"\n        className=\"has-text-link\"\n        onClick={handleClick}\n      >\n        {name}\n      </a>\n    </div>\n  );\n});\n","import React, { memo } from 'react';\nimport { Person } from '../../types/Person';\nimport { DropdownItem } from '../DropdownItem';\n\ninterface DropdownMenuProps {\n  people: Person[];\n  onSelected: (person: Person) => void;\n}\n\nexport const DropdownMenu: React.FC<DropdownMenuProps> = memo(({\n  people,\n  onSelected,\n}) => {\n  return (\n    <div className=\"dropdown-menu\" role=\"menu\">\n      <div className=\"dropdown-content\">\n        {people.length\n          ? (\n            people.map((person) => (\n              <DropdownItem\n                person={person}\n                onSelected={onSelected}\n                key={person.slug}\n              />\n            ))\n          ) : (\n            <span className=\"dropdown-item\">\n              No matching suggestions\n            </span>\n          )}\n      </div>\n    </div>\n  );\n});\n","import { Person } from '../types/Person';\n\nexport const peopleFromServer: Person[] = [\n  {\n    name: 'Carolus Haverbeke',\n    sex: 'm',\n    born: 1832,\n    died: 1905,\n    fatherName: 'Carel Haverbeke',\n    motherName: 'Maria van Brussel',\n    slug: 'carolus-haverbeke-1832',\n  },\n  {\n    name: 'Emma de Milliano',\n    sex: 'f',\n    born: 1876,\n    died: 1956,\n    fatherName: 'Petrus de Milliano',\n    motherName: 'Sophia van Damme',\n    slug: 'emma-de-milliano-1876',\n  },\n  {\n    name: 'Maria de Rycke',\n    sex: 'f',\n    born: 1683,\n    died: 1724,\n    fatherName: 'Frederik de Rycke',\n    motherName: 'Laurentia van Vlaenderen',\n    slug: 'maria-de-rycke-1683',\n  },\n  {\n    name: 'Jan van Brussel',\n    sex: 'm',\n    born: 1714,\n    died: 1748,\n    fatherName: 'Jacobus van Brussel',\n    motherName: 'Joanna van Rooten',\n    slug: 'jan-van-brussel-1714',\n  },\n  {\n    name: 'Philibert Haverbeke',\n    sex: 'm',\n    born: 1907,\n    died: 1997,\n    fatherName: 'Emile Haverbeke',\n    motherName: 'Emma de Milliano',\n    slug: 'philibert-haverbeke-1907',\n  },\n  {\n    name: 'Jan Frans van Brussel',\n    sex: 'm',\n    born: 1761,\n    died: 1833,\n    fatherName: 'Jacobus Bernardus van Brussel',\n    motherName: null,\n    slug: 'jan-frans-van-brussel-1761',\n  },\n  {\n    name: 'Pauwels van Haverbeke',\n    sex: 'm',\n    born: 1535,\n    died: 1582,\n    fatherName: 'N. van Haverbeke',\n    motherName: null,\n    slug: 'pauwels-van-haverbeke-1535',\n  },\n  {\n    name: 'Clara Aernoudts',\n    sex: 'f',\n    born: 1918,\n    died: 2012,\n    fatherName: 'Henry Aernoudts',\n    motherName: 'Sidonie Coene',\n    slug: 'clara-aernoudts-1918',\n  },\n  {\n    name: 'Emile Haverbeke',\n    sex: 'm',\n    born: 1877,\n    died: 1968,\n    fatherName: 'Carolus Haverbeke',\n    motherName: 'Maria Sturm',\n    slug: 'emile-haverbeke-1877',\n  },\n  {\n    name: 'Lieven de Causmaecker',\n    sex: 'm',\n    born: 1696,\n    died: 1724,\n    fatherName: 'Carel de Causmaecker',\n    motherName: 'Joanna Claes',\n    slug: 'lieven-de-causmaecker-1696',\n  },\n  {\n    name: 'Pieter Haverbeke',\n    sex: 'm',\n    born: 1602,\n    died: 1642,\n    fatherName: 'Lieven van Haverbeke',\n    motherName: null,\n    slug: 'pieter-haverbeke-1602',\n  },\n  {\n    name: 'Livina Haverbeke',\n    sex: 'f',\n    born: 1692,\n    died: 1743,\n    fatherName: 'Daniel Haverbeke',\n    motherName: 'Joanna de Pape',\n    slug: 'livina-haverbeke-1692',\n  },\n  {\n    name: 'Pieter Bernard Haverbeke',\n    sex: 'm',\n    born: 1695,\n    died: 1762,\n    fatherName: 'Willem Haverbeke',\n    motherName: 'Petronella Wauters',\n    slug: 'pieter-bernard-haverbeke-1695',\n  },\n  {\n    name: 'Lieven van Haverbeke',\n    sex: 'm',\n    born: 1570,\n    died: 1636,\n    fatherName: 'Pauwels van Haverbeke',\n    motherName: 'Lievijne Jans',\n    slug: 'lieven-van-haverbeke-1570',\n  },\n  {\n    name: 'Joanna de Causmaecker',\n    sex: 'f',\n    born: 1762,\n    died: 1807,\n    fatherName: 'Bernardus de Causmaecker',\n    motherName: null,\n    slug: 'joanna-de-causmaecker-1762',\n  },\n  {\n    name: 'Willem Haverbeke',\n    sex: 'm',\n    born: 1668,\n    died: 1731,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'willem-haverbeke-1668',\n  },\n  {\n    name: 'Pieter Antone Haverbeke',\n    sex: 'm',\n    born: 1753,\n    died: 1798,\n    fatherName: 'Jan Francies Haverbeke',\n    motherName: 'Petronella de Decker',\n    slug: 'pieter-antone-haverbeke-1753',\n  },\n  {\n    name: 'Maria van Brussel',\n    sex: 'f',\n    born: 1801,\n    died: 1834,\n    fatherName: 'Jan Frans van Brussel',\n    motherName: 'Joanna de Causmaecker',\n    slug: 'maria-van-brussel-1801',\n  },\n  {\n    name: 'Angela Haverbeke',\n    sex: 'f',\n    born: 1728,\n    died: 1734,\n    fatherName: 'Pieter Bernard Haverbeke',\n    motherName: 'Livina de Vrieze',\n    slug: 'angela-haverbeke-1728',\n  },\n  {\n    name: 'Elisabeth Haverbeke',\n    sex: 'f',\n    born: 1711,\n    died: 1754,\n    fatherName: 'Jan Haverbeke',\n    motherName: 'Maria de Rycke',\n    slug: 'elisabeth-haverbeke-1711',\n  },\n  {\n    name: 'Lievijne Jans',\n    sex: 'f',\n    born: 1542,\n    died: 1582,\n    fatherName: null,\n    motherName: null,\n    slug: 'lievijne-jans-1542',\n  },\n  {\n    name: 'Bernardus de Causmaecker',\n    sex: 'm',\n    born: 1721,\n    died: 1789,\n    fatherName: 'Lieven de Causmaecker',\n    motherName: 'Livina Haverbeke',\n    slug: 'bernardus-de-causmaecker-1721',\n  },\n  {\n    name: 'Jacoba Lammens',\n    sex: 'f',\n    born: 1699,\n    died: 1740,\n    fatherName: 'Lieven Lammens',\n    motherName: 'Livina de Vrieze',\n    slug: 'jacoba-lammens-1699',\n  },\n  {\n    name: 'Pieter de Decker',\n    sex: 'm',\n    born: 1705,\n    died: 1780,\n    fatherName: 'Joos de Decker',\n    motherName: 'Petronella van de Steene',\n    slug: 'pieter-de-decker-1705',\n  },\n  {\n    name: 'Joanna de Pape',\n    sex: 'f',\n    born: 1654,\n    died: 1723,\n    fatherName: 'Vincent de Pape',\n    motherName: 'Petronella Wauters',\n    slug: 'joanna-de-pape-1654',\n  },\n  {\n    name: 'Daniel Haverbeke',\n    sex: 'm',\n    born: 1652,\n    died: 1723,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'daniel-haverbeke-1652',\n  },\n  {\n    name: 'Lieven Haverbeke',\n    sex: 'm',\n    born: 1631,\n    died: 1676,\n    fatherName: 'Pieter Haverbeke',\n    motherName: 'Anna van Hecke',\n    slug: 'lieven-haverbeke-1631',\n  },\n  {\n    name: 'Martina de Pape',\n    sex: 'f',\n    born: 1666,\n    died: 1727,\n    fatherName: 'Vincent de Pape',\n    motherName: 'Petronella Wauters',\n    slug: 'martina-de-pape-1666',\n  },\n  {\n    name: 'Jan Francies Haverbeke',\n    sex: 'm',\n    born: 1725,\n    died: 1779,\n    fatherName: 'Pieter Bernard Haverbeke',\n    motherName: 'Livina de Vrieze',\n    slug: 'jan-francies-haverbeke-1725',\n  },\n  {\n    name: 'Maria Haverbeke',\n    sex: 'm',\n    born: 1905,\n    died: 1997,\n    fatherName: 'Emile Haverbeke',\n    motherName: 'Emma de Milliano',\n    slug: 'maria-haverbeke-1905',\n  },\n  {\n    name: 'Petronella de Decker',\n    sex: 'f',\n    born: 1731,\n    died: 1781,\n    fatherName: 'Pieter de Decker',\n    motherName: 'Livina Haverbeke',\n    slug: 'petronella-de-decker-1731',\n  },\n  {\n    name: 'Livina Sierens',\n    sex: 'f',\n    born: 1761,\n    died: 1826,\n    fatherName: 'Jan Sierens',\n    motherName: 'Maria van Waes',\n    slug: 'livina-sierens-1761',\n  },\n  {\n    name: 'Laurentia Haverbeke',\n    sex: 'f',\n    born: 1710,\n    died: 1786,\n    fatherName: 'Jan Haverbeke',\n    motherName: 'Maria de Rycke',\n    slug: 'laurentia-haverbeke-1710',\n  },\n  {\n    name: 'Carel Haverbeke',\n    sex: 'm',\n    born: 1796,\n    died: 1837,\n    fatherName: 'Pieter Antone Haverbeke',\n    motherName: 'Livina Sierens',\n    slug: 'carel-haverbeke-1796',\n  },\n  {\n    name: 'Elisabeth Hercke',\n    sex: 'f',\n    born: 1632,\n    died: 1674,\n    fatherName: 'Willem Hercke',\n    motherName: 'Margriet de Brabander',\n    slug: 'elisabeth-hercke-1632',\n  },\n  {\n    name: 'Jan Haverbeke',\n    sex: 'm',\n    born: 1671,\n    died: 1731,\n    fatherName: 'Lieven Haverbeke',\n    motherName: 'Elisabeth Hercke',\n    slug: 'jan-haverbeke-1671',\n  },\n  {\n    name: 'Anna van Hecke',\n    sex: 'f',\n    born: 1607,\n    died: 1670,\n    fatherName: 'Paschasius van Hecke',\n    motherName: 'Martijntken Beelaert',\n    slug: 'anna-van-hecke-1607',\n  },\n  {\n    name: 'Maria Sturm',\n    sex: 'f',\n    born: 1835,\n    died: 1917,\n    fatherName: 'Charles Sturm',\n    motherName: 'Seraphina Spelier',\n    slug: 'maria-sturm-1835',\n  },\n  {\n    name: 'Jacobus Bernardus van Brussel',\n    sex: 'm',\n    born: 1736,\n    died: 1809,\n    fatherName: 'Jan van Brussel',\n    motherName: 'Elisabeth Haverbeke',\n    slug: 'jacobus-bernardus-van-brussel-1736',\n  },\n];\n","import React, { useCallback, useMemo, useState } from 'react';\nimport { DropdownMenu } from './components/DropdownMenu';\nimport { peopleFromServer } from './data/people';\nimport { Person } from './types/Person';\nimport './App.scss';\n\nconst getVisiblePeople = (people: Person[], query: string) => {\n  const formattedQuery = query\n    .toLowerCase()\n    .replace(/\\s{2,}/g, ' '); // replaces 2 and more spaces in row to 1\n\n  return people\n    .filter(person => {\n      const formattedName = person.name.toLowerCase();\n\n      return formattedName.includes(formattedQuery);\n    });\n};\n\nconst debounce = (\n  func: React.Dispatch<React.SetStateAction<string>>,\n  delay: number,\n) => {\n  let timerId: NodeJS.Timeout;\n\n  return (query: string) => {\n    clearTimeout(timerId);\n    timerId = setTimeout(func, delay, query);\n  };\n};\n\nexport const App: React.FC = () => {\n  const [query, setQuery] = useState('');\n  const [appliedQuery, setAppliedQuery] = useState('');\n  const [selectedPerson, setSelectedPerson] = useState<Person | null>(null);\n  const [isSuggestionsVisible, setIsSuggestionsVisible] = useState(false);\n\n  const applyQuery = useCallback(\n    debounce(setAppliedQuery, 1000),\n    [],\n  );\n\n  const visiblePeople = useMemo(() => {\n    setIsSuggestionsVisible(true);\n\n    return getVisiblePeople(peopleFromServer, appliedQuery);\n  },\n  [peopleFromServer, appliedQuery]);\n\n  const handleQueryChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    setQuery(value);\n    applyQuery(value);\n    setIsSuggestionsVisible(false);\n  };\n\n  const onSelected = (person: Person) => {\n    setQuery(person.name);\n    setSelectedPerson(person);\n    setIsSuggestionsVisible(false);\n  };\n\n  const isDropdownMenuVisible = isSuggestionsVisible && appliedQuery;\n\n  return (\n    <main className=\"section\">\n      <h1 className=\"title\">\n        {selectedPerson\n          ? (\n            `${selectedPerson.name} (${selectedPerson.born} = ${selectedPerson.died})`\n          ) : (\n            'No selected person'\n          )}\n      </h1>\n\n      <div className=\"dropdown is-active\">\n        <div className=\"dropdown-trigger\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter a part of the name\"\n            className=\"input\"\n            value={query}\n            onChange={handleQueryChange}\n          />\n        </div>\n\n        {isDropdownMenuVisible && (\n          <DropdownMenu\n            people={visiblePeople}\n            onSelected={onSelected}\n          />\n        )}\n      </div>\n    </main>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}